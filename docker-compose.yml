version: "3"
services:
  puppeteer-service1:
    build:
      context: ./
    ports:
      - "6001:4000"
    container_name: puppeteer-service1
    depends_on:
      - "redis-server"
    links:
      - "redis-server"
    privileged: true
    #platform: linux/arm64
    restart: always
    entrypoint: npm run start-prod
  puppeteer-service2:
    build:
      context: ./
    ports:
      - "6002:4000"
    container_name: puppeteer-service2
    depends_on:
      - "redis-server"
    links:
      - "redis-server"
    privileged: true
    #platform: linux/arm64
    restart: always
    entrypoint: npm run start-prod
  puppeteer-service3:
    build:
      context: ./
    ports:
      - "6003:4000"
    container_name: puppeteer-service3
    depends_on:
      - "redis-server"
    links:
      - "redis-server"
    privileged: true
    #platform: linux/arm64
    restart: always
    entrypoint: npm run start-prod
  nginx:
    image: nginx:alpine
    restart: always
    depends_on:
      - puppeteer-service1
      - puppeteer-service2
      - puppeteer-service3
    ports:
      - "4444:80"
    volumes:
      - ./conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./conf.d/nginx.conf:/etc/nginx/nginx.conf
  redis-server:
    image: redis
    restart: always
    container_name: puppeteer-redis-server
